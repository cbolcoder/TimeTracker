@page "/register"
@inject IAuthService AuthService

<h3>Register</h3>

<EditForm Model="newUser" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <CustomInputText Label="Name"
                     Id="name"
                     @bind-Value="newUser.UserName"
                     ValidationFor="() => newUser.UserName" />
    <CustomInputText Label="Email"
                     Id="email"
                     @bind-Value="newUser.Email"
                     ValidationFor="() => newUser.Email" />
    <CustomInputText Label="Password"
                     Id="password"
                     @bind-Value="newUser.Password"
                     ValidationFor="() => newUser.Password"
                     Type="password" />
    <CustomInputText Label="Confirm Password"
                     Id="confirmPassword"
                     @bind-Value="newUser.ConfirmPassword"
                     ValidationFor="() => newUser.ConfirmPassword"
                     Type="password" />
    <CustomButton Text="Register" Type="submit" AddMarginTop />
</EditForm>

@if (registrationFailed)
{
    @foreach (var error in errors)
    {
        <div>
            <span class="text-sm text-red-600 font-extrabold my-1 mt-3">@error</span>
        </div>
    }
}
@if (registrationSuccessful)
{
    <div>
        <span class="text-sm text-green-600 font-extrabold my-1 mt-3">
            Registration Successful!  Please <a href="login" class="underline">login here</a> to continue.
        </span>
    </div>
}

@code {
    AccountRegistrationRequest newUser = new AccountRegistrationRequest();
    bool registrationFailed = false;
    bool registrationSuccessful = false;
    List<string> errors = new List<string>;

    async Task HandleSubmit()
    {
        registrationFailed = registrationSuccessful = false;
        errors = new List<string>();

        var response = await AuthService.Register(newUser);
        registrationSuccessful = response.IsSuccessful;

        if (!response.IsSuccessful && response.Errors != null)
        {
            errors = response.Errors.ToList();
            registrationFailed = true;
        }
        else if (!response.IsSuccessful)
        {
            errors.Add("Registration has failed for an unknown reason.");
            registrationFailed = true;
        }
    }
}
