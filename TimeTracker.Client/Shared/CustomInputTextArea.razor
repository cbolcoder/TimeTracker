@using System.Diagnostics.CodeAnalysis
@using System.Linq.Expressions
@inherits InputBase<string>

<div>
    @if (!string.IsNullOrWhiteSpace(Label))
    {
        <label for="@Id" class="block font-medium text-gray-700 mt-2">@Label</label>
    }
    <textarea id="@Id" @bind="@CurrentValue"
           class="mt-1 p-2 w-full rounded-md border-gray-200 shadow-sm" />
    <ValidationMessage For="@ValidationFor" class="text-sm text-red-600 font-extrabold my-1" />
</div>

@code {
    [Parameter]
    public string? Id { get; set; }
    [Parameter]
    public string? Label { get; set; }
    [Parameter]
    public Expression<Func<string>> ValidationFor { get; set; } = default!;

    protected override bool TryParseValueFromString(string? value, [MaybeNullWhen(false)] out string result, [NotNullWhen(false)] out string validationErrorMessage)
    {
        result = value ?? string.Empty;
        validationErrorMessage = string.Empty;
        return true;
    }
}
